document.addEventListener("DOMContentLoaded", () => {

    // game running
    let gameRunning = false;

    //player movement
    const player = document.getElementById("player");
    const area = document.getElementById("gamespace")
    const speed = 5;
    let position = 0;

    //fruit spawn const
    const thrower = document.getElementById("thrower");
    const fruitContainer = document.getElementById("fruitsContainer")
    const fruits = [];
    const gravity = 0.2;
    let spawnTimer = 0;

    //key presses
    let keys = {};

    document.addEventListener("keydown", (e) => { keys[e.key] = true; });
    document.addEventListener("keyup", (e) => { keys[e.key] = false; });

    //fruit functions
    function spawnFruit() {
        const el = document.createElement("div");
        el.className = "fruit";
        el.style.left = `${Math.random() * (fruitsContainer.clientWidth - 20)}px`;
        el.style.top = "0px";
        fruitsContainer.appendChild(el);

        const vx = 0;
        const vy = Math.random() * 1 + 1;
        const fruit = { x: parseFloat(el.style.left), y: 0, vx, vy, el };
        fruits.push(fruit);
    }

    function updateFruits() {
        const playerLeft = player.offsetLeft;
        const playerRight = playerLeft + player.offsetWidth;
        const playerTop = player.offsetTop;
        const playerBottom = playerTop + player.offsetHeight;

        for (let i = fruits.length - 1; i >= 0; i--) {
            const f = fruits[i];
            f.y += f.vy;
            f.el.style.top = `${f.y}px`;

            // check collision
            const fruitLeft = f.x;
            const fruitRight = f.x + 32;
            const fruitTop = f.y;
            const fruitBottom = f.y + 32;

            if (
                fruitRight > playerLeft &&
                fruitLeft < playerRight &&
                fruitBottom > playerTop &&
                fruitTop < playerBottom
            ) {
                f.el.style.backgroundImage = "url('caught.png')";
                setTimeout(() => f.el.remove(), 100);
                fruits.splice(i, 1);
                console.log("Caught one!");
                continue;
            }

            // hit bottom instead
            if (f.y > fruitsContainer.clientHeight - 32) {
                f.el.classList.add("splat");

                // wait for transition to complete before removing
                f.el.addEventListener("transitionend", () => {
                    f.el.remove();
                }, { once: true });
                fruits.splice(i, 1);
            }
        }
    }


    function renderFruits() {
        fruitsContainer.innerHTML = "";
        for (const f of fruits) {
            const el = document.createElement("div");
            el.className = "fruit";
            el.style.left = `${f.x}px`;
            el.style.top = `${f.y}px`;
            fruitsContainer.appendChild(el);
        }
    }

    //update
    function update() {
        if (keys["ArrowLeft"] && position > 0) {
            position -= speed;
        }
        if (keys["ArrowRight"] && position < area.clientWidth - player.clientWidth) {
            position += speed;
        }
        if (position > 500) {
            position = 500;
        }


        player.style.left = position + 'px';

        spawnTimer++;
        if (spawnTimer > 100) { // controls rain density
            spawnFruit();
            spawnTimer = 0;
        }
        updateFruits();
    }

    //gameloop
    function gameloop() {
        if (!gameRunning) return;

        update();
        renderFruits();
        requestAnimationFrame(gameloop);

    }

    function startGame() {
        const startBtn = document.getElementById("startBtn");
        startBtn.addEventListener("click", () => {
            if (!gameRunning) {
                gameRunning = true;
                gameloop();
                startBtn.style.display = "none";
            }
        });
    }

    function stopGame() {
        gameRunning = false;
    }

    startGame();
});